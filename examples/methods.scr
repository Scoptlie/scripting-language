
# Simple example of a custom vector type

vec2 = func(x, y) {
	return {
		x = x
		y = y
		
		add = func(other) {
			# If a function is called as a member of a struct,
			# names inside the function that do not refer to
			# local variables refer to struct members.
			
			# `@` or `global.` can be placed before a name to refer
			# only to top-level symbols instead.
			
			return @vec2(x + other.x, y + other.y)
			# or
			# return global.vec2(this.x + other.x, this.y + other.y)
		}
		
		asStr = func() {
			return "vec2(" + x + ", " + y + ")"
		}
	}
}

a = vec2(1, 3)
b = vec2(2, 4)
c = a.add(b)
print(a.asStr() + " + " + b.asStr() + " = " + c.asStr())
